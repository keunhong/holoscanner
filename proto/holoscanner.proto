syntax = "proto3";
package Holoscanner.Proto;

message Vec3D {
    float x = 1;
    float y = 2;
    float z = 3;
}

message Vec4D {
    float x = 1;
    float y = 2;
    float z = 3;
    float w = 4;
}

message Mesh {
    uint32 mesh_id = 2;
    uint64 timestamp = 3;
    bool is_last = 4;

    // We need the camera position in case we want to do space carving.
    Vec3D cam_position = 100;
    Vec4D cam_rotation = 101;

    repeated Vec3D vertices = 200;
    repeated int32 triangles = 201;
}

message Target {
    uint32 target_id = 1;
    Vec3D position = 2;
}

message GameState {
    float floor_y = 1;
    float ceiling_y = 2;
    repeated Target targets = 10;
}

message LocationRequest {

}
message LocationResponse {
    Vec3D location = 1;
    Vec3D orientation = 2;
}

message Message {
    enum Type {
        ACK = 0;
        FIN = 1;
        MESH = 10;
        GAME_STATE = 13;
        GAME_STATE_REQUEST = 14;
        TARGET_FOUND = 20;
        ANCHOR_SET = 30;
        ANCHOR_GET = 31;
        CLEAR_MESHES = 100;
    }

    Type type = 1;
    uint32 device_id = 2;

    // One or less of the following will be filled in.
    Mesh mesh = 100;
    LocationRequest location_request = 300;
    LocationResponse location_response = 400;
    GameState game_state = 500;
    uint32 target_id = 600;
}
